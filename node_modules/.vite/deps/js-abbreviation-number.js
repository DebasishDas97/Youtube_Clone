import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/js-abbreviation-number/dist/src/const.js
var require_const = __commonJS({
  "node_modules/js-abbreviation-number/dist/src/const.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultSymbols = ["", "k", "M", "G", "T", "P", "E"];
  }
});

// node_modules/js-abbreviation-number/dist/src/abbreviateNumber.js
var require_abbreviateNumber = __commonJS({
  "node_modules/js-abbreviation-number/dist/src/abbreviateNumber.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var const_1 = require_const();
    var defaultOptions = {
      padding: true,
      symbols: const_1.defaultSymbols
    };
    function abbreviateNumber(num, digit, options) {
      if (digit === void 0) {
        digit = 1;
      }
      if (Array.isArray(options)) {
        options = { symbols: options };
      }
      var _a = Object.assign({}, defaultOptions, options), symbols = _a.symbols, padding = _a.padding;
      var sign = Math.sign(num) >= 0;
      num = Math.abs(num);
      var tier = Math.log10(num) / 3 | 0;
      if (tier == 0)
        return (!sign ? "-" : "") + num.toString();
      var suffix = symbols[tier];
      if (!suffix)
        throw new RangeError();
      var scale = Math.pow(10, tier * 3);
      var scaled = num / scale;
      var rounded = scaled.toFixed(digit);
      if (!padding) {
        rounded = String(Number(rounded));
      }
      return (!sign ? "-" : "") + rounded + suffix;
    }
    exports.abbreviateNumber = abbreviateNumber;
  }
});

// node_modules/js-abbreviation-number/dist/src/utils.js
var require_utils = __commonJS({
  "node_modules/js-abbreviation-number/dist/src/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.symbolPow = function(index) {
      if (index === void 0) {
        index = 0;
      }
      return Math.pow(10, index * 3);
    };
  }
});

// node_modules/js-abbreviation-number/dist/src/unabbreviateNumber.js
var require_unabbreviateNumber = __commonJS({
  "node_modules/js-abbreviation-number/dist/src/unabbreviateNumber.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var const_1 = require_const();
    var utils_1 = require_utils();
    function unabbreviateNumber(num, symbols) {
      if (symbols === void 0) {
        symbols = const_1.defaultSymbols;
      }
      var numberPattern = "[+-]?([0-9]*[.])?[0-9]+";
      var symbolPattern = "" + symbols.join("|");
      var pattern = "^(" + numberPattern + ")(" + symbolPattern + ")$";
      var regex = new RegExp(pattern);
      var match = num.match(pattern) || [];
      if (regex.test(num) && match.length > 3) {
        var symbol = match[3];
        var symbolValue = utils_1.symbolPow(symbols.indexOf(symbol));
        var pureNum = Number(match[1]);
        return pureNum * symbolValue;
      } else {
        throw Error("This is not a valid input");
      }
    }
    exports.unabbreviateNumber = unabbreviateNumber;
  }
});

// node_modules/js-abbreviation-number/dist/index.js
var require_dist = __commonJS({
  "node_modules/js-abbreviation-number/dist/index.js"(exports) {
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(require_abbreviateNumber());
    __export(require_unabbreviateNumber());
  }
});
export default require_dist();
//# sourceMappingURL=js-abbreviation-number.js.map
